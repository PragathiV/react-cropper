{"version":3,"sources":["images/image.jpg","components/Navbar.js","components/crop-sizes/Horizondal.js","components/crop-sizes/Vertical.js","components/crop-sizes/Small.js","components/crop-sizes/Gallery.js","components/crop-sizes/SizeChooser.js","components/Home.js","components/About.js","App.js","serviceWorker.js","index.js","images/preview-icon.png"],"names":["module","exports","__webpack_require__","p","withRouter","props","react_default","a","createElement","className","href","react_router_dom","to","Horizondal","cropResult","src","alt","previewPlaceholder","Vertical","Small","Gallery","SizeChooser","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","cropImage","state","size","_this2","setState","parseInt","target","value","cropFrame","onSubmit","type","checked","onChange","handleChange","bind","Component","Image","Home","aspectX","aspectY","onImageUpload","files","dataTransfer","reader","FileReader","onload","image","window","result","width","height","alert","readAsDataURL","useDefaultImage","sizeId","newCropResults","slice","refs","cropper","getCroppedCanvas","toDataURL","updateCropFrame","console","log","react_cropper_default","ref","style","preview","aspectRatio","guides","cropBoxResisable","crop","_crop","dragCrop","cropBoxResizable","onClick","crop_sizes_SizeChooser","crop_sizes_Horizondal","crop_sizes_Vertical","crop_sizes_Small","crop_sizes_Gallery","React","About","App","components_Navbar","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a03a71a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.f91dfc08.jpg\";","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nconst Navbar = props => {\n  return (\n    <div className=\"navbar-fixed\">\n      <nav className=\"nav-wrapper red darken-3 navbar-fixed\">\n        <div className=\"container\">\n          <a href=\"/\" className=\"brand-logo\">\n            Boredom\n          </a>\n          <ul className=\"right\">\n            <li>\n              <NavLink to=\"/\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/about\">About</NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default withRouter(Navbar);\n","import React from \"react\";\nimport previewPlaceholder from \"../../images/preview-icon.png\";\n\nconst Horizondal = props => {\n  return (\n    <div className=\"col s3 center\">\n      <div className=\"card\">\n        <div className=\"card-image\">\n          {props.cropResult ? (\n            <img src={props.cropResult} alt=\"horizondal\" />\n          ) : (\n            <img src={previewPlaceholder} alt=\"horizondal\" />\n          )}\n        </div>\n        <div className=\"card-content\">\n          <p>Horizondal (755 x 450)</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Horizondal;\n","import React from \"react\";\nimport previewPlaceholder from \"../../images/preview-icon.png\";\n\nconst Vertical = props => {\n  return (\n    <div className=\"col s3 center\">\n      <div className=\"card\">\n        <div className=\"card-image\">\n          {props.cropResult ? (\n            <img src={props.cropResult} alt=\"vertical\" />\n          ) : (\n            <img src={previewPlaceholder} alt=\"horizondal\" />\n          )}\n        </div>\n        <div className=\"card-content\">\n          <p>Vertical (365 x 450)</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Vertical;\n","import React from \"react\";\nimport previewPlaceholder from \"../../images/preview-icon.png\";\n\nconst Small = props => {\n  return (\n    <div className=\"col s3 center\">\n      <div className=\"card\">\n        <div className=\"card-image\">\n          {props.cropResult ? (\n            <img src={props.cropResult} alt=\"small\" />\n          ) : (\n            <img src={previewPlaceholder} alt=\"horizondal\" />\n          )}\n        </div>\n        <div className=\"card-content\">\n          <p>Small (365 x 212)</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Small;\n","import React from \"react\";\nimport previewPlaceholder from \"../../images/preview-icon.png\";\n\nconst Gallery = props => {\n  return (\n    <div className=\"col s3 center\">\n      <div className=\"card\">\n        <div className=\"card-image\">\n          {props.cropResult ? (\n            <img src={props.cropResult} alt=\"gallery\" />\n          ) : (\n            <img src={previewPlaceholder} alt=\"horizondal\" />\n          )}\n        </div>\n        <div className=\"card-content\">\n          <p>Gallery (380 x 380)</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { Component } from \"react\";\n\nclass SizeChooser extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      size: 1\n    };\n  }\n\n  handleChange(e) {\n    this.setState(\n      {\n        size: parseInt(e.target.value)\n      },\n      () => {\n        this.props.cropFrame(this.state);\n      }\n    );\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.cropImage(this.state.size);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <p>\n          <label>\n            <input\n              className=\"with-gap\"\n              type=\"radio\"\n              checked={this.state.size === 1}\n              value=\"1\"\n              onChange={this.handleChange.bind(this)}\n            />\n            <span>Horizondal (755 x 450)</span>\n          </label>\n        </p>\n        <p>\n          <label>\n            <input\n              className=\"with-gap\"\n              type=\"radio\"\n              value=\"2\"\n              checked={this.state.size === 2}\n              onChange={this.handleChange.bind(this)}\n            />\n            <span>Vertical (365 x 450)</span>\n          </label>\n        </p>\n        <p>\n          <label>\n            <input\n              className=\"with-gap\"\n              type=\"radio\"\n              value=\"3\"\n              checked={this.state.size === 3}\n              onChange={this.handleChange.bind(this)}\n            />\n            <span>Small (365 x 212)</span>\n          </label>\n        </p>\n        <p>\n          <label>\n            <input\n              className=\"with-gap\"\n              type=\"radio\"\n              value=\"4\"\n              checked={this.state.size === 4}\n              onChange={this.handleChange.bind(this)}\n            />\n            <span>Gallery (380 x 380)</span>\n          </label>\n        </p>\n        <button type=\"submit\">Crop Image</button>\n      </form>\n    );\n  }\n}\n\nexport default SizeChooser;\n","import React from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nimport Horizondal from \"./crop-sizes/Horizondal\";\nimport Vertical from \"./crop-sizes/Vertical\";\nimport Small from \"./crop-sizes/Small\";\nimport Gallery from \"./crop-sizes/Gallery\";\n\nimport SizeChooser from \"./crop-sizes/SizeChooser\";\n\nimport Image from \"../images/image.jpg\";\n\nconst src = Image;\n\nclass Home extends React.Component {\n  _crop() {\n    // image in dataUrl. we can use this to show in gallery\n    console.log(this.refs.cropper.getCroppedCanvas().toDataURL());\n  }\n  state = {\n    src,\n    aspectX: null,\n    aspectY: null,\n    cropResult: []\n  };\n\n  //upload image\n  onImageUpload = e => {\n    e.preventDefault();\n    let files;\n\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      let image = new window.Image();\n      image.src = reader.result;\n\n      //check image size\n      image.onload = () => {\n        if (image.width !== 1024 && image.height !== 1024) {\n          alert(\"Please upload a 1024 x 1024 image !\");\n        } else {\n          this.setState({ src: reader.result });\n        }\n      };\n    };\n    reader.readAsDataURL(files[0]);\n  };\n\n  //use default image\n  useDefaultImage = () => {\n    this.setState({ src });\n  };\n\n  //crop image on click\n  cropImage = sizeId => {\n    const newCropResults = this.state.cropResult.slice();\n    newCropResults[\n      sizeId - 1\n    ] = this.refs.cropper.getCroppedCanvas().toDataURL();\n\n    if (typeof this.refs.cropper.getCroppedCanvas() === \"undefined\") {\n      return;\n    }\n\n    this.setState({\n      cropResult: newCropResults\n    });\n  };\n\n  updateCropFrame = sizeId => {\n    switch (sizeId.size) {\n      case 1:\n        this.setState({\n          aspectX: 151,\n          aspectY: 90\n        });\n        break;\n      case 2:\n        this.setState({\n          aspectX: 73,\n          aspectY: 90\n        });\n        break;\n      case 3:\n        this.setState({\n          aspectX: 365,\n          aspectY: 212\n        });\n        break;\n      case 4:\n        this.setState({\n          aspectX: 1,\n          aspectY: 1\n        });\n        break;\n      default:\n        this.setState({\n          aspectX: 1,\n          aspectY: 1\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {/* Cropper UI */}\n        <div className=\"row\">\n          <div className=\"col s10\">\n            <div className=\"card\">\n              <Cropper\n                ref=\"cropper\"\n                src={this.state.src}\n                style={{ height: 400, width: \"100%\" }}\n                preview=\".img-preview\"\n                aspectRatio={this.state.aspectX / this.state.aspectY}\n                guides={true}\n                cropBoxResisable={false}\n                crop={this._crop.bind(this)}\n                dragCrop={false}\n                cropBoxResizable={false}\n              />\n            </div>\n          </div>\n          <div className=\"col s2 padding-10\">\n            <button\n              onClick={this.useDefaultImage.bind(this)}\n              className=\"margin-bottom-20\"\n            >\n              Use default img\n            </button>\n\n            <input\n              className=\"margin-bottom-20\"\n              type=\"file\"\n              onChange={this.onImageUpload.bind(this)}\n            />\n            <SizeChooser\n              cropImage={this.cropImage.bind(this)}\n              cropFrame={this.updateCropFrame.bind(this)}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <Horizondal\n            cropImage={this.cropImage.bind(this)}\n            cropResult={this.state.cropResult[0]}\n          />\n\n          <Vertical\n            cropImage={this.cropImage.bind(this)}\n            cropResult={this.state.cropResult[1]}\n          />\n\n          <Small\n            cropImage={this.cropImage.bind(this)}\n            cropResult={this.state.cropResult[2]}\n          />\n\n          <Gallery\n            cropImage={this.cropImage.bind(this)}\n            cropResult={this.state.cropResult[3]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div className=\"container\">\n      <h4 className=\"center\">About page</h4>\n      <p>This is about page</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"*\" component={Home} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/preview-icon.df803060.png\";"],"sourceRoot":""}